name: Asset Tokenization Contract CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'soroban/asset-tokenization-contract/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'soroban/asset-tokenization-contract/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: wasm32-unknown-unknown

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Soroban CLI
      run: cargo install --locked soroban-cli

    - name: Change to contract directory
      run: cd soroban/asset-tokenization-contract

    - name: Format check
      run: cd soroban/asset-tokenization-contract && cargo fmt -- --check

    - name: Lint with Clippy
      run: cd soroban/asset-tokenization-contract && cargo clippy -- -D warnings

    - name: Build contract
      run: cd soroban/asset-tokenization-contract && cargo build --target wasm32-unknown-unknown --release

    - name: Run tests
      run: cd soroban/asset-tokenization-contract && cargo test

    - name: Run integration tests
      run: cd soroban/asset-tokenization-contract && cargo test integration_tests --test integration_tests

    - name: Check contract size
      run: ls -lh soroban/asset-tokenization-contract/target/wasm32-unknown-unknown/release/asset_tokenization_contract.wasm

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cd soroban/asset-tokenization-contract && cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        components: llvm-tools-preview

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Generate code coverage
      run: cd soroban/asset-tokenization-contract && cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: soroban/asset-tokenization-contract/lcov.info
        fail_ci_if_error: true